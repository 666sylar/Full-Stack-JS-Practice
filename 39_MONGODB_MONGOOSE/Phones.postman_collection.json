{
	"info": {
		"_postman_id": "9bff1f01-89a9-4954-8946-9abf407b5d8a",
		"name": "Phones",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37224117"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "users",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"Test\",\r\n    \"lastName\": \"Testovich\",\r\n    \"email\": \"test@pm.me\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "users/userId/phones",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/users/{{userId}}/phones",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"{{userId}}",
								"phones"
							]
						}
					},
					"response": []
				},
				{
					"name": "users/userId/phones",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"brand\": \"Apple\",\r\n    \"model\": \"iPhone 25\",\r\n    \"year\": 2025,\r\n    \"ram\": 64,\r\n    \"processor\": \"M25\",\r\n    \"screenSize\": 16,\r\n    \"hasNFC\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/users/{{userId}}/phones",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"{{userId}}",
								"phones"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "phones",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"brand\": \"Apple\",\n    \"model\": \"iPhone 25\",\n    \"year\": 2025,\n    \"ram\": 64,\n    \"processor\": \"M25\",\n    \"screenSize\": 16,\n    \"hasNFC\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/phones",
					"host": [
						"{{url}}"
					],
					"path": [
						"phones"
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "phones",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/phones",
					"host": [
						"{{url}}"
					],
					"path": [
						"phones"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "phones/phoneId",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/phones/{{phoneId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"phones",
						"{{phoneId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "phones/phoneId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"brand\": \"Apple\",\n    \"model\": \"iPhone 24\",\n    \"year\": 2025,\n    \"ram\": 64,\n    \"processor\": \"M25\",\n    \"screenSize\": 16,\n    \"hasNFC\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/phones/{{phoneId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"phones",
						"{{phoneId}}"
					]
				},
				"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
			},
			"response": []
		},
		{
			"name": "phones/phoneId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/phones/{{phoneId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"phones",
						"{{phoneId}}"
					]
				},
				"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}